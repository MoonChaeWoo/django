"""
Django settings for django_prj project.

Generated by 'django-admin startproject' using Django 4.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-29xd9%36zbbo0qx=925%idpj1z!t=yl3ev+g3atyaavp%ug(ez'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # django_extensions은 pip install django_extensions와 pip install ipython을 설치하고 나서 추가를 해야한다.
    # 이후 쉘에서 python manage.py shell_plus명령을 실행하면 models.py(OSM)에 명시된 DB들을 참조하여 쉘에서 확인 가능하다.
    # 그 후 for i in Post.objects.all():
    #    print(f'{i} :: category-{i.category}') 와 같이 파이썬 문법을 사용해서 조회를 하면 된다.
    'django_extensions',

    # pip install django-crispy-forms를 설치한 후 crispy_forms를 추가해준다.
    # settings.py의 아래 static과 media의 루트를 정해주는 곳에서 crispy_form 스타일을 bootstrap4로 바꿔준다.
    'crispy_forms',

    # pip install django-markdownx을 설치한 후 markdownx를 추가해준다.
    'markdownx',
    
    'blog',
    'single_pages',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_prj.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_prj.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

# 시간을 서울 아시아권으로 바꿔준다.
TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

#TZ는 사용하지 않도록 false 처리를 한다.
USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, '_static')

# MEDIA_URL은 /media로 지정함. 웹 브라우저 도메인 뒤에 /media라는 경로가 따라오면 미디어 파일을 사용하겠다는 의미로 지정.
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, '_meida')

# pip install django-crispy-forms를 설치한 후 crispy_forms를 추가해준다.
# crispy_form 스타일을 bootstrap4로 바꿔준다.
CRISPY_TEMPLATE_PACK = 'bootstrap4'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
